#!/usr/bin/env ruby

require "optparse"
require "code2gist"

options = {}
OptionParser.new do |opt|
  opt.banner = "Usage: code2gist [upload|replace] file [description] [OPTS]"
  opt.on('-h', '--html', 'Assume it\'s HTML when replacing', "Default: false") { |h| options[:html] = h }
  opt.on('-s', '--substitute', 'Replace the contents of the original file', "Default: false") { |s| options[:substitute] = s }
  opt.on('-l', '--login LOGIN', String, 'Your GitHub login (to be the owner of the gist)') { |l| options[:login] = l }
  opt.on('-t', '--token TOKEN', String, 'Your GitHub api token (to be the owner of the gist)') { |t| options[:token] = t }
  opt.parse!(ARGV)
end

action = ARGV[0]
$stderr.puts "You must specify a valid action: upload or replace. `code2gist --help` for more information." unless ["upload", "replace"].include?(action)

path = ARGV[1]
description = ARGV[2] || ""

if path.nil? || !File.exists?(path)
  $stderr.puts "You must specify a valid file to read from"
  exit
end

login = options.delete(:login)
token = options.delete(:token)
substitute = options.delete(:substitute)
anonymous = true

if login && options
  Code2Gist::Config.github_login = login
  Code2Gist::Config.github_token = token
  anonymous = false
end

if action == "upload"
  puts Code2Gist.upload(File.read(path), description, anonymous)
elsif action == "replace"
  new_text = Code2Gist.replace(File.read(path), description, options)

  if substitute
    File.open(path, 'w') { |f| f.write(new_text) }
  else
    puts new_text
  end
end

